"use strict";angular.module("typeaheadDropdown.tpl",[]).run(["$templateCache",function(a){a.put("templates/typeaheadDropdown.tpl.html",'<div>    <div ng-if=options class=uib-dropdown dropdown>        <div class=input-group>            <input id="typeahead_dropdown" class=form-control placeholder="Select or type..." ng-model=mdl[config.optionLabel] typeahead="op[config.optionLabel] for op in options | filter:$viewValue" typeahead-editable=false typeahead-on-select="onSelect($item, $model, $label)" ng-required="required" ng-disabled="disabled">             <span class=input-group-btn>                <button class="btn btn-default dropdown-toggle" dropdown-toggle ng-disabled="disabled">                    <span class=caret></span>                </button>            </span>        </div>        <ul class=uib-dropdown-menu role=menu style=max-height:200px;overflow-y:auto>            <li ng-repeat="op in options">                <a href ng-click=onSelect(op)>{{op[config.optionLabel]}}</a>            </li>        </ul>    </div></div>')}]),angular.module("apg.typeaheadDropdown",["typeaheadDropdown.tpl","ui.bootstrap"]).directive("typeaheadDropdown",function(){return{templateUrl:"templates/typeaheadDropdown.tpl.html",scope:{mdl:"=ngModel",options:"=",config:"=?",events:"=",required:"=?ngRequired",disabled:"=?ngDisabled"},require:"ngModel",replace:!0,link:function(a,b,c){a.externalEvents={onItemSelect:angular.noop},angular.extend(a.externalEvents,a.events||[])},controller:["$scope",function(a){a.onSelect=function(b){a.mdl=angular.copy(b),void 0!==a.events&&a.events.onItemSelect(b)}}]}});